"use strict";

var _config = _interopRequireDefault(require("@apollosproject/config"));

var _cloudinary = _interopRequireWildcard(require("../cloudinary"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const originalUrl = 'https://apollosrock.newspring.cc/GetImage.ashx?guid=f54b0db0-95f5-44ad-b8f2-8bcd1b23cfdb';
describe('Cloudinary', () => {
  beforeEach(() => {
    // reset cloudinary config
    _config.default.loadJs({
      CLOUDINARY: {
        URL: 'cloudinary://123456789012345:abcdeghijklmnopqrstuvwxyz12@n07t21i7'
      }
    });

    (0, _cloudinary.config)();
  });
  afterEach(() => {
    _config.default.loadJs({
      CLOUDINARY: {
        URL: null
      }
    });

    (0, _cloudinary.config)();
  });
  it('must return the URL if CLOUDINARY_URL is not specified', () => {
    _config.default.loadJs({
      CLOUDINARY: {
        URL: null
      }
    });

    (0, _cloudinary.config)();
    const url = (0, _cloudinary.default)(originalUrl);
    expect(url).toEqual(originalUrl);
  });
  it('must return a cloudinary fetch URL if CLOUDINARY_URL is defined', () => {
    const url = (0, _cloudinary.default)(originalUrl);
    expect(url).toEqual('https://res.cloudinary.com/n07t21i7/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Df54b0db0-95f5-44ad-b8f2-8bcd1b23cfdb');
  });
  it('must not double parse a cloudinary url.', () => {
    const url = (0, _cloudinary.default)(originalUrl);
    const doubledParsed = (0, _cloudinary.default)(url);
    expect(url).toEqual(doubledParsed);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9fX3Rlc3RzX18vY2xvdWRpbmFyeS50ZXN0cy5qcyJdLCJuYW1lcyI6WyJvcmlnaW5hbFVybCIsImRlc2NyaWJlIiwiYmVmb3JlRWFjaCIsIkFwb2xsb3NDb25maWciLCJsb2FkSnMiLCJDTE9VRElOQVJZIiwiVVJMIiwiYWZ0ZXJFYWNoIiwiaXQiLCJ1cmwiLCJleHBlY3QiLCJ0b0VxdWFsIiwiZG91YmxlZFBhcnNlZCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7Ozs7O0FBRUEsTUFBTUEsV0FBVyxHQUNmLDBGQURGO0FBR0FDLFFBQVEsQ0FBQyxZQUFELEVBQWUsTUFBTTtBQUMzQkMsRUFBQUEsVUFBVSxDQUFDLE1BQU07QUFDZjtBQUNBQyxvQkFBY0MsTUFBZCxDQUFxQjtBQUNuQkMsTUFBQUEsVUFBVSxFQUFFO0FBQ1ZDLFFBQUFBLEdBQUcsRUFDRDtBQUZRO0FBRE8sS0FBckI7O0FBTUE7QUFDRCxHQVRTLENBQVY7QUFVQUMsRUFBQUEsU0FBUyxDQUFDLE1BQU07QUFDZEosb0JBQWNDLE1BQWQsQ0FBcUI7QUFDbkJDLE1BQUFBLFVBQVUsRUFBRTtBQUNWQyxRQUFBQSxHQUFHLEVBQUU7QUFESztBQURPLEtBQXJCOztBQUtBO0FBQ0QsR0FQUSxDQUFUO0FBUUFFLEVBQUFBLEVBQUUsQ0FBQyx3REFBRCxFQUEyRCxNQUFNO0FBQ2pFTCxvQkFBY0MsTUFBZCxDQUFxQjtBQUNuQkMsTUFBQUEsVUFBVSxFQUFFO0FBQ1ZDLFFBQUFBLEdBQUcsRUFBRTtBQURLO0FBRE8sS0FBckI7O0FBS0E7QUFFQSxVQUFNRyxHQUFHLEdBQUcseUJBQWVULFdBQWYsQ0FBWjtBQUVBVSxJQUFBQSxNQUFNLENBQUNELEdBQUQsQ0FBTixDQUFZRSxPQUFaLENBQW9CWCxXQUFwQjtBQUNELEdBWEMsQ0FBRjtBQVlBUSxFQUFBQSxFQUFFLENBQUMsaUVBQUQsRUFBb0UsTUFBTTtBQUMxRSxVQUFNQyxHQUFHLEdBQUcseUJBQWVULFdBQWYsQ0FBWjtBQUVBVSxJQUFBQSxNQUFNLENBQUNELEdBQUQsQ0FBTixDQUFZRSxPQUFaLENBQ0Usb0tBREY7QUFHRCxHQU5DLENBQUY7QUFPQUgsRUFBQUEsRUFBRSxDQUFDLHlDQUFELEVBQTRDLE1BQU07QUFDbEQsVUFBTUMsR0FBRyxHQUFHLHlCQUFlVCxXQUFmLENBQVo7QUFDQSxVQUFNWSxhQUFhLEdBQUcseUJBQWVILEdBQWYsQ0FBdEI7QUFFQUMsSUFBQUEsTUFBTSxDQUFDRCxHQUFELENBQU4sQ0FBWUUsT0FBWixDQUFvQkMsYUFBcEI7QUFDRCxHQUxDLENBQUY7QUFNRCxDQTVDTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFwb2xsb3NDb25maWcgZnJvbSAnQGFwb2xsb3Nwcm9qZWN0L2NvbmZpZyc7XG5pbXBvcnQgd2l0aENsb3VkaW5hcnksIHsgY29uZmlnIH0gZnJvbSAnLi4vY2xvdWRpbmFyeSc7XG5cbmNvbnN0IG9yaWdpbmFsVXJsID1cbiAgJ2h0dHBzOi8vYXBvbGxvc3JvY2submV3c3ByaW5nLmNjL0dldEltYWdlLmFzaHg/Z3VpZD1mNTRiMGRiMC05NWY1LTQ0YWQtYjhmMi04YmNkMWIyM2NmZGInO1xuXG5kZXNjcmliZSgnQ2xvdWRpbmFyeScsICgpID0+IHtcbiAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgLy8gcmVzZXQgY2xvdWRpbmFyeSBjb25maWdcbiAgICBBcG9sbG9zQ29uZmlnLmxvYWRKcyh7XG4gICAgICBDTE9VRElOQVJZOiB7XG4gICAgICAgIFVSTDpcbiAgICAgICAgICAnY2xvdWRpbmFyeTovLzEyMzQ1Njc4OTAxMjM0NTphYmNkZWdoaWprbG1ub3BxcnN0dXZ3eHl6MTJAbjA3dDIxaTcnLFxuICAgICAgfSxcbiAgICB9KTtcbiAgICBjb25maWcoKTtcbiAgfSk7XG4gIGFmdGVyRWFjaCgoKSA9PiB7XG4gICAgQXBvbGxvc0NvbmZpZy5sb2FkSnMoe1xuICAgICAgQ0xPVURJTkFSWToge1xuICAgICAgICBVUkw6IG51bGwsXG4gICAgICB9LFxuICAgIH0pO1xuICAgIGNvbmZpZygpO1xuICB9KTtcbiAgaXQoJ211c3QgcmV0dXJuIHRoZSBVUkwgaWYgQ0xPVURJTkFSWV9VUkwgaXMgbm90IHNwZWNpZmllZCcsICgpID0+IHtcbiAgICBBcG9sbG9zQ29uZmlnLmxvYWRKcyh7XG4gICAgICBDTE9VRElOQVJZOiB7XG4gICAgICAgIFVSTDogbnVsbCxcbiAgICAgIH0sXG4gICAgfSk7XG4gICAgY29uZmlnKCk7XG5cbiAgICBjb25zdCB1cmwgPSB3aXRoQ2xvdWRpbmFyeShvcmlnaW5hbFVybCk7XG5cbiAgICBleHBlY3QodXJsKS50b0VxdWFsKG9yaWdpbmFsVXJsKTtcbiAgfSk7XG4gIGl0KCdtdXN0IHJldHVybiBhIGNsb3VkaW5hcnkgZmV0Y2ggVVJMIGlmIENMT1VESU5BUllfVVJMIGlzIGRlZmluZWQnLCAoKSA9PiB7XG4gICAgY29uc3QgdXJsID0gd2l0aENsb3VkaW5hcnkob3JpZ2luYWxVcmwpO1xuXG4gICAgZXhwZWN0KHVybCkudG9FcXVhbChcbiAgICAgICdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9uMDd0MjFpNy9pbWFnZS9mZXRjaC9jX2xpbWl0LGZfYXV0byx3XzE2MDAvaHR0cHM6Ly9hcG9sbG9zcm9jay5uZXdzcHJpbmcuY2MvR2V0SW1hZ2UuYXNoeCUzRmd1aWQlM0RmNTRiMGRiMC05NWY1LTQ0YWQtYjhmMi04YmNkMWIyM2NmZGInXG4gICAgKTtcbiAgfSk7XG4gIGl0KCdtdXN0IG5vdCBkb3VibGUgcGFyc2UgYSBjbG91ZGluYXJ5IHVybC4nLCAoKSA9PiB7XG4gICAgY29uc3QgdXJsID0gd2l0aENsb3VkaW5hcnkob3JpZ2luYWxVcmwpO1xuICAgIGNvbnN0IGRvdWJsZWRQYXJzZWQgPSB3aXRoQ2xvdWRpbmFyeSh1cmwpO1xuXG4gICAgZXhwZWN0KHVybCkudG9FcXVhbChkb3VibGVkUGFyc2VkKTtcbiAgfSk7XG59KTtcbiJdfQ==