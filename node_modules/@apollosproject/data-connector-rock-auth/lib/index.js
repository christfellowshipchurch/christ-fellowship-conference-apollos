"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "registerToken", {
  enumerable: true,
  get: function () {
    return _token.registerToken;
  }
});
Object.defineProperty(exports, "generateToken", {
  enumerable: true,
  get: function () {
    return _token.generateToken;
  }
});
Object.defineProperty(exports, "schema", {
  enumerable: true,
  get: function () {
    return _dataSchema.authSchema;
  }
});
Object.defineProperty(exports, "dataSource", {
  enumerable: true,
  get: function () {
    return _dataSource.default;
  }
});
exports.resolver = exports.contextMiddleware = void 0;

var _serverCore = require("@apollosproject/server-core");

var _lodash = require("lodash");

var _token = require("./token");

var _dataSchema = require("@apollosproject/data-schema");

var _dataSource = _interopRequireDefault(require("./data-source"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const contextMiddleware = ({
  req,
  context: ctx
}) => {
  if ((0, _lodash.get)(req, 'headers.authorization')) {
    const {
      userToken,
      rockCookie,
      sessionId
    } = (0, _token.registerToken)(req.headers.authorization);

    if (sessionId) {
      return { ...ctx,
        userToken,
        rockCookie,
        sessionId
      };
    }
  }

  return ctx;
};

exports.contextMiddleware = contextMiddleware;
const resolver = {
  Query: {
    currentUser: (root, args, {
      dataSources
    }) => dataSources.Auth.getCurrentPerson()
  },
  AuthenticatedUser: {
    id: ({
      id
    }, args, context, {
      parentType
    }) => (0, _serverCore.createGlobalId)(id, parentType.name),
    profile: authUser => authUser
  },
  Authentication: {
    user: (root, args, {
      dataSources
    }) => dataSources.Auth.getCurrentPerson()
  },
  Mutation: {
    authenticate: (root, {
      identity,
      password
    }, {
      dataSources
    }) => dataSources.Auth.authenticate({
      identity,
      password
    }),
    changePassword: (root, {
      password
    }, {
      dataSources
    }) => dataSources.Auth.changePassword({
      password
    }),
    registerPerson: (root, args, {
      dataSources
    }) => dataSources.Auth.registerPerson(args)
  }
};
exports.resolver = resolver;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJjb250ZXh0TWlkZGxld2FyZSIsInJlcSIsImNvbnRleHQiLCJjdHgiLCJ1c2VyVG9rZW4iLCJyb2NrQ29va2llIiwic2Vzc2lvbklkIiwiaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJyZXNvbHZlciIsIlF1ZXJ5IiwiY3VycmVudFVzZXIiLCJyb290IiwiYXJncyIsImRhdGFTb3VyY2VzIiwiQXV0aCIsImdldEN1cnJlbnRQZXJzb24iLCJBdXRoZW50aWNhdGVkVXNlciIsImlkIiwicGFyZW50VHlwZSIsIm5hbWUiLCJwcm9maWxlIiwiYXV0aFVzZXIiLCJBdXRoZW50aWNhdGlvbiIsInVzZXIiLCJNdXRhdGlvbiIsImF1dGhlbnRpY2F0ZSIsImlkZW50aXR5IiwicGFzc3dvcmQiLCJjaGFuZ2VQYXNzd29yZCIsInJlZ2lzdGVyUGVyc29uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBR0E7O0FBQ0E7Ozs7QUFFTyxNQUFNQSxpQkFBaUIsR0FBRyxDQUFDO0FBQUVDLEVBQUFBLEdBQUY7QUFBT0MsRUFBQUEsT0FBTyxFQUFFQztBQUFoQixDQUFELEtBQTJCO0FBQzFELE1BQUksaUJBQUlGLEdBQUosRUFBUyx1QkFBVCxDQUFKLEVBQXVDO0FBQ3JDLFVBQU07QUFBRUcsTUFBQUEsU0FBRjtBQUFhQyxNQUFBQSxVQUFiO0FBQXlCQyxNQUFBQTtBQUF6QixRQUF1QywwQkFDM0NMLEdBQUcsQ0FBQ00sT0FBSixDQUFZQyxhQUQrQixDQUE3Qzs7QUFHQSxRQUFJRixTQUFKLEVBQWU7QUFDYixhQUFPLEVBQ0wsR0FBR0gsR0FERTtBQUVMQyxRQUFBQSxTQUZLO0FBR0xDLFFBQUFBLFVBSEs7QUFJTEMsUUFBQUE7QUFKSyxPQUFQO0FBTUQ7QUFDRjs7QUFDRCxTQUFPSCxHQUFQO0FBQ0QsQ0FmTTs7O0FBaUJBLE1BQU1NLFFBQVEsR0FBRztBQUN0QkMsRUFBQUEsS0FBSyxFQUFFO0FBQ0xDLElBQUFBLFdBQVcsRUFBRSxDQUFDQyxJQUFELEVBQU9DLElBQVAsRUFBYTtBQUFFQyxNQUFBQTtBQUFGLEtBQWIsS0FDWEEsV0FBVyxDQUFDQyxJQUFaLENBQWlCQyxnQkFBakI7QUFGRyxHQURlO0FBS3RCQyxFQUFBQSxpQkFBaUIsRUFBRTtBQUNqQkMsSUFBQUEsRUFBRSxFQUFFLENBQUM7QUFBRUEsTUFBQUE7QUFBRixLQUFELEVBQVNMLElBQVQsRUFBZVgsT0FBZixFQUF3QjtBQUFFaUIsTUFBQUE7QUFBRixLQUF4QixLQUNGLGdDQUFlRCxFQUFmLEVBQW1CQyxVQUFVLENBQUNDLElBQTlCLENBRmU7QUFHakJDLElBQUFBLE9BQU8sRUFBR0MsUUFBRCxJQUFjQTtBQUhOLEdBTEc7QUFVdEJDLEVBQUFBLGNBQWMsRUFBRTtBQUNkQyxJQUFBQSxJQUFJLEVBQUUsQ0FBQ1osSUFBRCxFQUFPQyxJQUFQLEVBQWE7QUFBRUMsTUFBQUE7QUFBRixLQUFiLEtBQWlDQSxXQUFXLENBQUNDLElBQVosQ0FBaUJDLGdCQUFqQjtBQUR6QixHQVZNO0FBYXRCUyxFQUFBQSxRQUFRLEVBQUU7QUFDUkMsSUFBQUEsWUFBWSxFQUFFLENBQUNkLElBQUQsRUFBTztBQUFFZSxNQUFBQSxRQUFGO0FBQVlDLE1BQUFBO0FBQVosS0FBUCxFQUErQjtBQUFFZCxNQUFBQTtBQUFGLEtBQS9CLEtBQ1pBLFdBQVcsQ0FBQ0MsSUFBWixDQUFpQlcsWUFBakIsQ0FBOEI7QUFBRUMsTUFBQUEsUUFBRjtBQUFZQyxNQUFBQTtBQUFaLEtBQTlCLENBRk07QUFHUkMsSUFBQUEsY0FBYyxFQUFFLENBQUNqQixJQUFELEVBQU87QUFBRWdCLE1BQUFBO0FBQUYsS0FBUCxFQUFxQjtBQUFFZCxNQUFBQTtBQUFGLEtBQXJCLEtBQ2RBLFdBQVcsQ0FBQ0MsSUFBWixDQUFpQmMsY0FBakIsQ0FBZ0M7QUFBRUQsTUFBQUE7QUFBRixLQUFoQyxDQUpNO0FBS1JFLElBQUFBLGNBQWMsRUFBRSxDQUFDbEIsSUFBRCxFQUFPQyxJQUFQLEVBQWE7QUFBRUMsTUFBQUE7QUFBRixLQUFiLEtBQ2RBLFdBQVcsQ0FBQ0MsSUFBWixDQUFpQmUsY0FBakIsQ0FBZ0NqQixJQUFoQztBQU5NO0FBYlksQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVHbG9iYWxJZCB9IGZyb20gJ0BhcG9sbG9zcHJvamVjdC9zZXJ2ZXItY29yZSc7XG5pbXBvcnQgeyBnZXQgfSBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgcmVnaXN0ZXJUb2tlbiB9IGZyb20gJy4vdG9rZW4nO1xuXG5leHBvcnQgeyByZWdpc3RlclRva2VuLCBnZW5lcmF0ZVRva2VuIH0gZnJvbSAnLi90b2tlbic7XG5leHBvcnQgeyBhdXRoU2NoZW1hIGFzIHNjaGVtYSB9IGZyb20gJ0BhcG9sbG9zcHJvamVjdC9kYXRhLXNjaGVtYSc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIGRhdGFTb3VyY2UgfSBmcm9tICcuL2RhdGEtc291cmNlJztcblxuZXhwb3J0IGNvbnN0IGNvbnRleHRNaWRkbGV3YXJlID0gKHsgcmVxLCBjb250ZXh0OiBjdHggfSkgPT4ge1xuICBpZiAoZ2V0KHJlcSwgJ2hlYWRlcnMuYXV0aG9yaXphdGlvbicpKSB7XG4gICAgY29uc3QgeyB1c2VyVG9rZW4sIHJvY2tDb29raWUsIHNlc3Npb25JZCB9ID0gcmVnaXN0ZXJUb2tlbihcbiAgICAgIHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb25cbiAgICApO1xuICAgIGlmIChzZXNzaW9uSWQpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLmN0eCxcbiAgICAgICAgdXNlclRva2VuLFxuICAgICAgICByb2NrQ29va2llLFxuICAgICAgICBzZXNzaW9uSWQsXG4gICAgICB9O1xuICAgIH1cbiAgfVxuICByZXR1cm4gY3R4O1xufTtcblxuZXhwb3J0IGNvbnN0IHJlc29sdmVyID0ge1xuICBRdWVyeToge1xuICAgIGN1cnJlbnRVc2VyOiAocm9vdCwgYXJncywgeyBkYXRhU291cmNlcyB9KSA9PlxuICAgICAgZGF0YVNvdXJjZXMuQXV0aC5nZXRDdXJyZW50UGVyc29uKCksXG4gIH0sXG4gIEF1dGhlbnRpY2F0ZWRVc2VyOiB7XG4gICAgaWQ6ICh7IGlkIH0sIGFyZ3MsIGNvbnRleHQsIHsgcGFyZW50VHlwZSB9KSA9PlxuICAgICAgY3JlYXRlR2xvYmFsSWQoaWQsIHBhcmVudFR5cGUubmFtZSksXG4gICAgcHJvZmlsZTogKGF1dGhVc2VyKSA9PiBhdXRoVXNlcixcbiAgfSxcbiAgQXV0aGVudGljYXRpb246IHtcbiAgICB1c2VyOiAocm9vdCwgYXJncywgeyBkYXRhU291cmNlcyB9KSA9PiBkYXRhU291cmNlcy5BdXRoLmdldEN1cnJlbnRQZXJzb24oKSxcbiAgfSxcbiAgTXV0YXRpb246IHtcbiAgICBhdXRoZW50aWNhdGU6IChyb290LCB7IGlkZW50aXR5LCBwYXNzd29yZCB9LCB7IGRhdGFTb3VyY2VzIH0pID0+XG4gICAgICBkYXRhU291cmNlcy5BdXRoLmF1dGhlbnRpY2F0ZSh7IGlkZW50aXR5LCBwYXNzd29yZCB9KSxcbiAgICBjaGFuZ2VQYXNzd29yZDogKHJvb3QsIHsgcGFzc3dvcmQgfSwgeyBkYXRhU291cmNlcyB9KSA9PlxuICAgICAgZGF0YVNvdXJjZXMuQXV0aC5jaGFuZ2VQYXNzd29yZCh7IHBhc3N3b3JkIH0pLFxuICAgIHJlZ2lzdGVyUGVyc29uOiAocm9vdCwgYXJncywgeyBkYXRhU291cmNlcyB9KSA9PlxuICAgICAgZGF0YVNvdXJjZXMuQXV0aC5yZWdpc3RlclBlcnNvbihhcmdzKSxcbiAgfSxcbn07XG4iXX0=