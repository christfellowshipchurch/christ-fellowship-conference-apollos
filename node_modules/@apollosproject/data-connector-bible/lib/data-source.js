"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _apolloDatasourceRest = require("apollo-datasource-rest");

var _config = _interopRequireDefault(require("@apollosproject/config"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const {
  BIBLE_API
} = _config.default;

class Scripture extends _apolloDatasourceRest.RESTDataSource {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "resource", 'Scripture');

    _defineProperty(this, "baseURL", 'https://api.scripture.api.bible/v1/bibles/');

    _defineProperty(this, "token", BIBLE_API.KEY);
  }

  willSendRequest(request) {
    request.headers.set('api-key', `${this.token}`);
  }

  async getScripture(query) {
    const bibleId = BIBLE_API.BIBLE_ID;
    return this.get(`${bibleId}/search?query=${query}`);
  } // In the future, we can use this field to handle content that returns multiple
  // "scriptures". Like references across several different books of the bible.


  async getScriptures(query) {
    const scripture = await this.getScripture(query);
    return [scripture];
  }

}

exports.default = Scripture;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9kYXRhLXNvdXJjZS5qcyJdLCJuYW1lcyI6WyJCSUJMRV9BUEkiLCJBcG9sbG9zQ29uZmlnIiwiU2NyaXB0dXJlIiwiUkVTVERhdGFTb3VyY2UiLCJLRVkiLCJ3aWxsU2VuZFJlcXVlc3QiLCJyZXF1ZXN0IiwiaGVhZGVycyIsInNldCIsInRva2VuIiwiZ2V0U2NyaXB0dXJlIiwicXVlcnkiLCJiaWJsZUlkIiwiQklCTEVfSUQiLCJnZXQiLCJnZXRTY3JpcHR1cmVzIiwic2NyaXB0dXJlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7OztBQUVBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFnQkMsZUFBdEI7O0FBRWUsTUFBTUMsU0FBTixTQUF3QkMsb0NBQXhCLENBQXVDO0FBQUE7QUFBQTs7QUFBQSxzQ0FDekMsV0FEeUM7O0FBQUEscUNBRzFDLDRDQUgwQzs7QUFBQSxtQ0FLNUNILFNBQVMsQ0FBQ0ksR0FMa0M7QUFBQTs7QUFPcERDLEVBQUFBLGVBQWUsQ0FBQ0MsT0FBRCxFQUFVO0FBQ3ZCQSxJQUFBQSxPQUFPLENBQUNDLE9BQVIsQ0FBZ0JDLEdBQWhCLENBQW9CLFNBQXBCLEVBQWdDLEdBQUUsS0FBS0MsS0FBTSxFQUE3QztBQUNEOztBQUVELFFBQU1DLFlBQU4sQ0FBbUJDLEtBQW5CLEVBQTBCO0FBQ3hCLFVBQU1DLE9BQU8sR0FBR1osU0FBUyxDQUFDYSxRQUExQjtBQUNBLFdBQU8sS0FBS0MsR0FBTCxDQUFVLEdBQUVGLE9BQVEsaUJBQWdCRCxLQUFNLEVBQTFDLENBQVA7QUFDRCxHQWRtRCxDQWdCcEQ7QUFDQTs7O0FBQ0EsUUFBTUksYUFBTixDQUFvQkosS0FBcEIsRUFBMkI7QUFDekIsVUFBTUssU0FBUyxHQUFHLE1BQU0sS0FBS04sWUFBTCxDQUFrQkMsS0FBbEIsQ0FBeEI7QUFDQSxXQUFPLENBQUNLLFNBQUQsQ0FBUDtBQUNEOztBQXJCbUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSRVNURGF0YVNvdXJjZSB9IGZyb20gJ2Fwb2xsby1kYXRhc291cmNlLXJlc3QnO1xuaW1wb3J0IEFwb2xsb3NDb25maWcgZnJvbSAnQGFwb2xsb3Nwcm9qZWN0L2NvbmZpZyc7XG5cbmNvbnN0IHsgQklCTEVfQVBJIH0gPSBBcG9sbG9zQ29uZmlnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTY3JpcHR1cmUgZXh0ZW5kcyBSRVNURGF0YVNvdXJjZSB7XG4gIHJlc291cmNlID0gJ1NjcmlwdHVyZSc7XG5cbiAgYmFzZVVSTCA9ICdodHRwczovL2FwaS5zY3JpcHR1cmUuYXBpLmJpYmxlL3YxL2JpYmxlcy8nO1xuXG4gIHRva2VuID0gQklCTEVfQVBJLktFWTtcblxuICB3aWxsU2VuZFJlcXVlc3QocmVxdWVzdCkge1xuICAgIHJlcXVlc3QuaGVhZGVycy5zZXQoJ2FwaS1rZXknLCBgJHt0aGlzLnRva2VufWApO1xuICB9XG5cbiAgYXN5bmMgZ2V0U2NyaXB0dXJlKHF1ZXJ5KSB7XG4gICAgY29uc3QgYmlibGVJZCA9IEJJQkxFX0FQSS5CSUJMRV9JRDtcbiAgICByZXR1cm4gdGhpcy5nZXQoYCR7YmlibGVJZH0vc2VhcmNoP3F1ZXJ5PSR7cXVlcnl9YCk7XG4gIH1cblxuICAvLyBJbiB0aGUgZnV0dXJlLCB3ZSBjYW4gdXNlIHRoaXMgZmllbGQgdG8gaGFuZGxlIGNvbnRlbnQgdGhhdCByZXR1cm5zIG11bHRpcGxlXG4gIC8vIFwic2NyaXB0dXJlc1wiLiBMaWtlIHJlZmVyZW5jZXMgYWNyb3NzIHNldmVyYWwgZGlmZmVyZW50IGJvb2tzIG9mIHRoZSBiaWJsZS5cbiAgYXN5bmMgZ2V0U2NyaXB0dXJlcyhxdWVyeSkge1xuICAgIGNvbnN0IHNjcmlwdHVyZSA9IGF3YWl0IHRoaXMuZ2V0U2NyaXB0dXJlKHF1ZXJ5KTtcbiAgICByZXR1cm4gW3NjcmlwdHVyZV07XG4gIH1cbn1cbiJdfQ==