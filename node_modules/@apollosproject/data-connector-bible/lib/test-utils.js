"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buildContext = exports.buildGetMock = void 0;

var _apolloServerCaching = require("apollo-server-caching");

const buildGetMock = (response, dataSource) => {
  const get = jest.fn();

  if (Array.isArray(response) && Array.isArray(response[0])) {
    response.forEach(responseVal => {
      get.mockReturnValueOnce(new Promise(resolve => resolve(dataSource.normalize(responseVal))));
    });
  }

  get.mockReturnValue(new Promise(resolve => resolve(dataSource.normalize(response))));
  return get;
};

exports.buildGetMock = buildGetMock;

const buildContext = serverConfig => req => {
  const testContext = serverConfig.context(req);
  const testDataSources = serverConfig.dataSources(); // Apollo Server does this internally.

  Object.values(testDataSources).forEach(dataSource => {
    if (dataSource.initialize) {
      dataSource.initialize({
        context: testContext,
        cache: _apolloServerCaching.KeyValueCache
      });
    }
  });
  testContext.dataSources = testDataSources;
  return testContext;
};

exports.buildContext = buildContext;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy90ZXN0LXV0aWxzLmpzIl0sIm5hbWVzIjpbImJ1aWxkR2V0TW9jayIsInJlc3BvbnNlIiwiZGF0YVNvdXJjZSIsImdldCIsImplc3QiLCJmbiIsIkFycmF5IiwiaXNBcnJheSIsImZvckVhY2giLCJyZXNwb25zZVZhbCIsIm1vY2tSZXR1cm5WYWx1ZU9uY2UiLCJQcm9taXNlIiwicmVzb2x2ZSIsIm5vcm1hbGl6ZSIsIm1vY2tSZXR1cm5WYWx1ZSIsImJ1aWxkQ29udGV4dCIsInNlcnZlckNvbmZpZyIsInJlcSIsInRlc3RDb250ZXh0IiwiY29udGV4dCIsInRlc3REYXRhU291cmNlcyIsImRhdGFTb3VyY2VzIiwiT2JqZWN0IiwidmFsdWVzIiwiaW5pdGlhbGl6ZSIsImNhY2hlIiwiS2V5VmFsdWVDYWNoZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVPLE1BQU1BLFlBQVksR0FBRyxDQUFDQyxRQUFELEVBQVdDLFVBQVgsS0FBMEI7QUFDcEQsUUFBTUMsR0FBRyxHQUFHQyxJQUFJLENBQUNDLEVBQUwsRUFBWjs7QUFDQSxNQUFJQyxLQUFLLENBQUNDLE9BQU4sQ0FBY04sUUFBZCxLQUEyQkssS0FBSyxDQUFDQyxPQUFOLENBQWNOLFFBQVEsQ0FBQyxDQUFELENBQXRCLENBQS9CLEVBQTJEO0FBQ3pEQSxJQUFBQSxRQUFRLENBQUNPLE9BQVQsQ0FBa0JDLFdBQUQsSUFBaUI7QUFDaENOLE1BQUFBLEdBQUcsQ0FBQ08sbUJBQUosQ0FDRSxJQUFJQyxPQUFKLENBQWFDLE9BQUQsSUFBYUEsT0FBTyxDQUFDVixVQUFVLENBQUNXLFNBQVgsQ0FBcUJKLFdBQXJCLENBQUQsQ0FBaEMsQ0FERjtBQUdELEtBSkQ7QUFLRDs7QUFDRE4sRUFBQUEsR0FBRyxDQUFDVyxlQUFKLENBQ0UsSUFBSUgsT0FBSixDQUFhQyxPQUFELElBQWFBLE9BQU8sQ0FBQ1YsVUFBVSxDQUFDVyxTQUFYLENBQXFCWixRQUFyQixDQUFELENBQWhDLENBREY7QUFHQSxTQUFPRSxHQUFQO0FBQ0QsQ0FiTTs7OztBQWVBLE1BQU1ZLFlBQVksR0FBSUMsWUFBRCxJQUFtQkMsR0FBRCxJQUFTO0FBQ3JELFFBQU1DLFdBQVcsR0FBR0YsWUFBWSxDQUFDRyxPQUFiLENBQXFCRixHQUFyQixDQUFwQjtBQUNBLFFBQU1HLGVBQWUsR0FBR0osWUFBWSxDQUFDSyxXQUFiLEVBQXhCLENBRnFELENBR3JEOztBQUNBQyxFQUFBQSxNQUFNLENBQUNDLE1BQVAsQ0FBY0gsZUFBZCxFQUErQlosT0FBL0IsQ0FBd0NOLFVBQUQsSUFBZ0I7QUFDckQsUUFBSUEsVUFBVSxDQUFDc0IsVUFBZixFQUEyQjtBQUN6QnRCLE1BQUFBLFVBQVUsQ0FBQ3NCLFVBQVgsQ0FBc0I7QUFBRUwsUUFBQUEsT0FBTyxFQUFFRCxXQUFYO0FBQXdCTyxRQUFBQSxLQUFLLEVBQUVDO0FBQS9CLE9BQXRCO0FBQ0Q7QUFDRixHQUpEO0FBS0FSLEVBQUFBLFdBQVcsQ0FBQ0csV0FBWixHQUEwQkQsZUFBMUI7QUFDQSxTQUFPRixXQUFQO0FBQ0QsQ0FYTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEtleVZhbHVlQ2FjaGUgfSBmcm9tICdhcG9sbG8tc2VydmVyLWNhY2hpbmcnO1xuXG5leHBvcnQgY29uc3QgYnVpbGRHZXRNb2NrID0gKHJlc3BvbnNlLCBkYXRhU291cmNlKSA9PiB7XG4gIGNvbnN0IGdldCA9IGplc3QuZm4oKTtcbiAgaWYgKEFycmF5LmlzQXJyYXkocmVzcG9uc2UpICYmIEFycmF5LmlzQXJyYXkocmVzcG9uc2VbMF0pKSB7XG4gICAgcmVzcG9uc2UuZm9yRWFjaCgocmVzcG9uc2VWYWwpID0+IHtcbiAgICAgIGdldC5tb2NrUmV0dXJuVmFsdWVPbmNlKFxuICAgICAgICBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gcmVzb2x2ZShkYXRhU291cmNlLm5vcm1hbGl6ZShyZXNwb25zZVZhbCkpKVxuICAgICAgKTtcbiAgICB9KTtcbiAgfVxuICBnZXQubW9ja1JldHVyblZhbHVlKFxuICAgIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiByZXNvbHZlKGRhdGFTb3VyY2Uubm9ybWFsaXplKHJlc3BvbnNlKSkpXG4gICk7XG4gIHJldHVybiBnZXQ7XG59O1xuXG5leHBvcnQgY29uc3QgYnVpbGRDb250ZXh0ID0gKHNlcnZlckNvbmZpZykgPT4gKHJlcSkgPT4ge1xuICBjb25zdCB0ZXN0Q29udGV4dCA9IHNlcnZlckNvbmZpZy5jb250ZXh0KHJlcSk7XG4gIGNvbnN0IHRlc3REYXRhU291cmNlcyA9IHNlcnZlckNvbmZpZy5kYXRhU291cmNlcygpO1xuICAvLyBBcG9sbG8gU2VydmVyIGRvZXMgdGhpcyBpbnRlcm5hbGx5LlxuICBPYmplY3QudmFsdWVzKHRlc3REYXRhU291cmNlcykuZm9yRWFjaCgoZGF0YVNvdXJjZSkgPT4ge1xuICAgIGlmIChkYXRhU291cmNlLmluaXRpYWxpemUpIHtcbiAgICAgIGRhdGFTb3VyY2UuaW5pdGlhbGl6ZSh7IGNvbnRleHQ6IHRlc3RDb250ZXh0LCBjYWNoZTogS2V5VmFsdWVDYWNoZSB9KTtcbiAgICB9XG4gIH0pO1xuICB0ZXN0Q29udGV4dC5kYXRhU291cmNlcyA9IHRlc3REYXRhU291cmNlcztcbiAgcmV0dXJuIHRlc3RDb250ZXh0O1xufTtcbiJdfQ==