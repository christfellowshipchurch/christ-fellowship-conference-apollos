"use strict";

var _casual = _interopRequireDefault(require("casual"));

var _resolver = _interopRequireDefault(require("../resolver"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const sampleData = {
  _id: _casual.default.word,
  __type: 'Test'
};
it('Node should only have a __resolveType on the resolver', () => {
  const {
    Node
  } = _resolver.default;
  expect(Node.__resolveType).toBeTruthy();
  expect(Object.keys(Node).length).toEqual(1);
  expect(Object.keys(Node)[0]).toEqual('__resolveType');
});
it('Node should return the type from the data passed to it', () => {
  const {
    Node
  } = _resolver.default;
  const schema = {
    getType(type) {
      expect(type).toEqual(sampleData.__type);
      return type;
    }

  };

  const __type = Node.__resolveType(sampleData, null, {
    schema
  });

  expect(__type).toEqual(sampleData.__type);
});
it('Query node should return the data via the `Node` class', () => {
  const {
    Query
  } = _resolver.default;
  const fakeId = _casual.default.word;
  const models = {
    Node: {
      get(id) {
        expect(id).toEqual(fakeId);
        return sampleData;
      }

    }
  };
  const data = Query.node(null, {
    id: fakeId
  }, {
    models
  });
  expect(data).toEqual(sampleData);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ub2RlL19fdGVzdHNfXy9yZXNvbHZlci5qcyJdLCJuYW1lcyI6WyJzYW1wbGVEYXRhIiwiX2lkIiwiY2FzdWFsIiwid29yZCIsIl9fdHlwZSIsIml0IiwiTm9kZSIsIlJlc29sdmVyIiwiZXhwZWN0IiwiX19yZXNvbHZlVHlwZSIsInRvQmVUcnV0aHkiLCJPYmplY3QiLCJrZXlzIiwibGVuZ3RoIiwidG9FcXVhbCIsInNjaGVtYSIsImdldFR5cGUiLCJ0eXBlIiwiUXVlcnkiLCJmYWtlSWQiLCJtb2RlbHMiLCJnZXQiLCJpZCIsImRhdGEiLCJub2RlIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOzs7O0FBRUEsTUFBTUEsVUFBVSxHQUFHO0FBQ2pCQyxFQUFBQSxHQUFHLEVBQUVDLGdCQUFPQyxJQURLO0FBRWpCQyxFQUFBQSxNQUFNLEVBQUU7QUFGUyxDQUFuQjtBQUtBQyxFQUFFLENBQUMsdURBQUQsRUFBMEQsTUFBTTtBQUNoRSxRQUFNO0FBQUVDLElBQUFBO0FBQUYsTUFBV0MsaUJBQWpCO0FBRUFDLEVBQUFBLE1BQU0sQ0FBQ0YsSUFBSSxDQUFDRyxhQUFOLENBQU4sQ0FBMkJDLFVBQTNCO0FBQ0FGLEVBQUFBLE1BQU0sQ0FBQ0csTUFBTSxDQUFDQyxJQUFQLENBQVlOLElBQVosRUFBa0JPLE1BQW5CLENBQU4sQ0FBaUNDLE9BQWpDLENBQXlDLENBQXpDO0FBQ0FOLEVBQUFBLE1BQU0sQ0FBQ0csTUFBTSxDQUFDQyxJQUFQLENBQVlOLElBQVosRUFBa0IsQ0FBbEIsQ0FBRCxDQUFOLENBQTZCUSxPQUE3QixDQUFxQyxlQUFyQztBQUNELENBTkMsQ0FBRjtBQVFBVCxFQUFFLENBQUMsd0RBQUQsRUFBMkQsTUFBTTtBQUNqRSxRQUFNO0FBQUVDLElBQUFBO0FBQUYsTUFBV0MsaUJBQWpCO0FBRUEsUUFBTVEsTUFBTSxHQUFHO0FBQ2JDLElBQUFBLE9BQU8sQ0FBQ0MsSUFBRCxFQUFPO0FBQ1pULE1BQUFBLE1BQU0sQ0FBQ1MsSUFBRCxDQUFOLENBQWFILE9BQWIsQ0FBcUJkLFVBQVUsQ0FBQ0ksTUFBaEM7QUFDQSxhQUFPYSxJQUFQO0FBQ0Q7O0FBSlksR0FBZjs7QUFPQSxRQUFNYixNQUFNLEdBQUdFLElBQUksQ0FBQ0csYUFBTCxDQUFtQlQsVUFBbkIsRUFBK0IsSUFBL0IsRUFBcUM7QUFDbERlLElBQUFBO0FBRGtELEdBQXJDLENBQWY7O0FBR0FQLEVBQUFBLE1BQU0sQ0FBQ0osTUFBRCxDQUFOLENBQWVVLE9BQWYsQ0FBdUJkLFVBQVUsQ0FBQ0ksTUFBbEM7QUFDRCxDQWRDLENBQUY7QUFnQkFDLEVBQUUsQ0FBQyx3REFBRCxFQUEyRCxNQUFNO0FBQ2pFLFFBQU07QUFBRWEsSUFBQUE7QUFBRixNQUFZWCxpQkFBbEI7QUFFQSxRQUFNWSxNQUFNLEdBQUdqQixnQkFBT0MsSUFBdEI7QUFDQSxRQUFNaUIsTUFBTSxHQUFHO0FBQ2JkLElBQUFBLElBQUksRUFBRTtBQUNKZSxNQUFBQSxHQUFHLENBQUNDLEVBQUQsRUFBSztBQUNOZCxRQUFBQSxNQUFNLENBQUNjLEVBQUQsQ0FBTixDQUFXUixPQUFYLENBQW1CSyxNQUFuQjtBQUNBLGVBQU9uQixVQUFQO0FBQ0Q7O0FBSkc7QUFETyxHQUFmO0FBU0EsUUFBTXVCLElBQUksR0FBR0wsS0FBSyxDQUFDTSxJQUFOLENBQ1gsSUFEVyxFQUVYO0FBQ0VGLElBQUFBLEVBQUUsRUFBRUg7QUFETixHQUZXLEVBS1g7QUFDRUMsSUFBQUE7QUFERixHQUxXLENBQWI7QUFTQVosRUFBQUEsTUFBTSxDQUFDZSxJQUFELENBQU4sQ0FBYVQsT0FBYixDQUFxQmQsVUFBckI7QUFDRCxDQXZCQyxDQUFGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNhc3VhbCBmcm9tICdjYXN1YWwnO1xuaW1wb3J0IFJlc29sdmVyIGZyb20gJy4uL3Jlc29sdmVyJztcblxuY29uc3Qgc2FtcGxlRGF0YSA9IHtcbiAgX2lkOiBjYXN1YWwud29yZCxcbiAgX190eXBlOiAnVGVzdCcsXG59O1xuXG5pdCgnTm9kZSBzaG91bGQgb25seSBoYXZlIGEgX19yZXNvbHZlVHlwZSBvbiB0aGUgcmVzb2x2ZXInLCAoKSA9PiB7XG4gIGNvbnN0IHsgTm9kZSB9ID0gUmVzb2x2ZXI7XG5cbiAgZXhwZWN0KE5vZGUuX19yZXNvbHZlVHlwZSkudG9CZVRydXRoeSgpO1xuICBleHBlY3QoT2JqZWN0LmtleXMoTm9kZSkubGVuZ3RoKS50b0VxdWFsKDEpO1xuICBleHBlY3QoT2JqZWN0LmtleXMoTm9kZSlbMF0pLnRvRXF1YWwoJ19fcmVzb2x2ZVR5cGUnKTtcbn0pO1xuXG5pdCgnTm9kZSBzaG91bGQgcmV0dXJuIHRoZSB0eXBlIGZyb20gdGhlIGRhdGEgcGFzc2VkIHRvIGl0JywgKCkgPT4ge1xuICBjb25zdCB7IE5vZGUgfSA9IFJlc29sdmVyO1xuXG4gIGNvbnN0IHNjaGVtYSA9IHtcbiAgICBnZXRUeXBlKHR5cGUpIHtcbiAgICAgIGV4cGVjdCh0eXBlKS50b0VxdWFsKHNhbXBsZURhdGEuX190eXBlKTtcbiAgICAgIHJldHVybiB0eXBlO1xuICAgIH0sXG4gIH07XG5cbiAgY29uc3QgX190eXBlID0gTm9kZS5fX3Jlc29sdmVUeXBlKHNhbXBsZURhdGEsIG51bGwsIHtcbiAgICBzY2hlbWEsXG4gIH0pO1xuICBleHBlY3QoX190eXBlKS50b0VxdWFsKHNhbXBsZURhdGEuX190eXBlKTtcbn0pO1xuXG5pdCgnUXVlcnkgbm9kZSBzaG91bGQgcmV0dXJuIHRoZSBkYXRhIHZpYSB0aGUgYE5vZGVgIGNsYXNzJywgKCkgPT4ge1xuICBjb25zdCB7IFF1ZXJ5IH0gPSBSZXNvbHZlcjtcblxuICBjb25zdCBmYWtlSWQgPSBjYXN1YWwud29yZDtcbiAgY29uc3QgbW9kZWxzID0ge1xuICAgIE5vZGU6IHtcbiAgICAgIGdldChpZCkge1xuICAgICAgICBleHBlY3QoaWQpLnRvRXF1YWwoZmFrZUlkKTtcbiAgICAgICAgcmV0dXJuIHNhbXBsZURhdGE7XG4gICAgICB9LFxuICAgIH0sXG4gIH07XG5cbiAgY29uc3QgZGF0YSA9IFF1ZXJ5Lm5vZGUoXG4gICAgbnVsbCxcbiAgICB7XG4gICAgICBpZDogZmFrZUlkLFxuICAgIH0sXG4gICAge1xuICAgICAgbW9kZWxzLFxuICAgIH1cbiAgKTtcbiAgZXhwZWN0KGRhdGEpLnRvRXF1YWwoc2FtcGxlRGF0YSk7XG59KTtcbiJdfQ==