"use strict";

var _config = _interopRequireDefault(require("@apollosproject/config"));

var _testUtils = require("../../test-utils");

var _dataSource = _interopRequireDefault(require("../data-source"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_config.default.loadJs({
  ROCK: {
    API_URL: 'https://apollosrock.newspring.cc/api',
    API_TOKEN: 'some-rock-token',
    IMAGE_URL: 'https://apollosrock.newspring.cc/GetImage.ashx'
  }
});

describe('ContentChannelModel', () => {
  it('constructs', () => {
    expect(new _dataSource.default()).toBeTruthy();
  });
  it('gets all', () => {
    const dataSource = new _dataSource.default();
    dataSource.get = (0, _testUtils.buildGetMock)([{
      Id: 1
    }, {
      Id: 2
    }], dataSource);
    const result = dataSource.all();
    expect(result).resolves.toMatchSnapshot();
    expect(dataSource.get.mock.calls).toMatchSnapshot();
  });
  it('gets by id', () => {
    const dataSource = new _dataSource.default();
    dataSource.get = (0, _testUtils.buildGetMock)([{
      Id: 1
    }], dataSource);
    const result = dataSource.getFromId(1);
    expect(result).resolves.toMatchSnapshot();
    expect(dataSource.get.mock.calls).toMatchSnapshot();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb250ZW50LWNoYW5uZWxzL19fdGVzdHNfXy9tb2RlbC50ZXN0cy5qcyJdLCJuYW1lcyI6WyJBcG9sbG9zQ29uZmlnIiwibG9hZEpzIiwiUk9DSyIsIkFQSV9VUkwiLCJBUElfVE9LRU4iLCJJTUFHRV9VUkwiLCJkZXNjcmliZSIsIml0IiwiZXhwZWN0IiwiQ29udGVudENoYW5uZWxEYXRhU291cmNlIiwidG9CZVRydXRoeSIsImRhdGFTb3VyY2UiLCJnZXQiLCJJZCIsInJlc3VsdCIsImFsbCIsInJlc29sdmVzIiwidG9NYXRjaFNuYXBzaG90IiwibW9jayIsImNhbGxzIiwiZ2V0RnJvbUlkIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOzs7O0FBRUFBLGdCQUFjQyxNQUFkLENBQXFCO0FBQ25CQyxFQUFBQSxJQUFJLEVBQUU7QUFDSkMsSUFBQUEsT0FBTyxFQUFFLHNDQURMO0FBRUpDLElBQUFBLFNBQVMsRUFBRSxpQkFGUDtBQUdKQyxJQUFBQSxTQUFTLEVBQUU7QUFIUDtBQURhLENBQXJCOztBQVFBQyxRQUFRLENBQUMscUJBQUQsRUFBd0IsTUFBTTtBQUNwQ0MsRUFBQUEsRUFBRSxDQUFDLFlBQUQsRUFBZSxNQUFNO0FBQ3JCQyxJQUFBQSxNQUFNLENBQUMsSUFBSUMsbUJBQUosRUFBRCxDQUFOLENBQXVDQyxVQUF2QztBQUNELEdBRkMsQ0FBRjtBQUdBSCxFQUFBQSxFQUFFLENBQUMsVUFBRCxFQUFhLE1BQU07QUFDbkIsVUFBTUksVUFBVSxHQUFHLElBQUlGLG1CQUFKLEVBQW5CO0FBQ0FFLElBQUFBLFVBQVUsQ0FBQ0MsR0FBWCxHQUFpQiw2QkFBYSxDQUFDO0FBQUVDLE1BQUFBLEVBQUUsRUFBRTtBQUFOLEtBQUQsRUFBWTtBQUFFQSxNQUFBQSxFQUFFLEVBQUU7QUFBTixLQUFaLENBQWIsRUFBcUNGLFVBQXJDLENBQWpCO0FBQ0EsVUFBTUcsTUFBTSxHQUFHSCxVQUFVLENBQUNJLEdBQVgsRUFBZjtBQUNBUCxJQUFBQSxNQUFNLENBQUNNLE1BQUQsQ0FBTixDQUFlRSxRQUFmLENBQXdCQyxlQUF4QjtBQUNBVCxJQUFBQSxNQUFNLENBQUNHLFVBQVUsQ0FBQ0MsR0FBWCxDQUFlTSxJQUFmLENBQW9CQyxLQUFyQixDQUFOLENBQWtDRixlQUFsQztBQUNELEdBTkMsQ0FBRjtBQVFBVixFQUFBQSxFQUFFLENBQUMsWUFBRCxFQUFlLE1BQU07QUFDckIsVUFBTUksVUFBVSxHQUFHLElBQUlGLG1CQUFKLEVBQW5CO0FBQ0FFLElBQUFBLFVBQVUsQ0FBQ0MsR0FBWCxHQUFpQiw2QkFBYSxDQUFDO0FBQUVDLE1BQUFBLEVBQUUsRUFBRTtBQUFOLEtBQUQsQ0FBYixFQUEwQkYsVUFBMUIsQ0FBakI7QUFDQSxVQUFNRyxNQUFNLEdBQUdILFVBQVUsQ0FBQ1MsU0FBWCxDQUFxQixDQUFyQixDQUFmO0FBQ0FaLElBQUFBLE1BQU0sQ0FBQ00sTUFBRCxDQUFOLENBQWVFLFFBQWYsQ0FBd0JDLGVBQXhCO0FBQ0FULElBQUFBLE1BQU0sQ0FBQ0csVUFBVSxDQUFDQyxHQUFYLENBQWVNLElBQWYsQ0FBb0JDLEtBQXJCLENBQU4sQ0FBa0NGLGVBQWxDO0FBQ0QsR0FOQyxDQUFGO0FBT0QsQ0FuQk8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBcG9sbG9zQ29uZmlnIGZyb20gJ0BhcG9sbG9zcHJvamVjdC9jb25maWcnO1xuaW1wb3J0IHsgYnVpbGRHZXRNb2NrIH0gZnJvbSAnLi4vLi4vdGVzdC11dGlscyc7XG5pbXBvcnQgQ29udGVudENoYW5uZWxEYXRhU291cmNlIGZyb20gJy4uL2RhdGEtc291cmNlJztcblxuQXBvbGxvc0NvbmZpZy5sb2FkSnMoe1xuICBST0NLOiB7XG4gICAgQVBJX1VSTDogJ2h0dHBzOi8vYXBvbGxvc3JvY2submV3c3ByaW5nLmNjL2FwaScsXG4gICAgQVBJX1RPS0VOOiAnc29tZS1yb2NrLXRva2VuJyxcbiAgICBJTUFHRV9VUkw6ICdodHRwczovL2Fwb2xsb3Nyb2NrLm5ld3NwcmluZy5jYy9HZXRJbWFnZS5hc2h4JyxcbiAgfSxcbn0pO1xuXG5kZXNjcmliZSgnQ29udGVudENoYW5uZWxNb2RlbCcsICgpID0+IHtcbiAgaXQoJ2NvbnN0cnVjdHMnLCAoKSA9PiB7XG4gICAgZXhwZWN0KG5ldyBDb250ZW50Q2hhbm5lbERhdGFTb3VyY2UoKSkudG9CZVRydXRoeSgpO1xuICB9KTtcbiAgaXQoJ2dldHMgYWxsJywgKCkgPT4ge1xuICAgIGNvbnN0IGRhdGFTb3VyY2UgPSBuZXcgQ29udGVudENoYW5uZWxEYXRhU291cmNlKCk7XG4gICAgZGF0YVNvdXJjZS5nZXQgPSBidWlsZEdldE1vY2soW3sgSWQ6IDEgfSwgeyBJZDogMiB9XSwgZGF0YVNvdXJjZSk7XG4gICAgY29uc3QgcmVzdWx0ID0gZGF0YVNvdXJjZS5hbGwoKTtcbiAgICBleHBlY3QocmVzdWx0KS5yZXNvbHZlcy50b01hdGNoU25hcHNob3QoKTtcbiAgICBleHBlY3QoZGF0YVNvdXJjZS5nZXQubW9jay5jYWxscykudG9NYXRjaFNuYXBzaG90KCk7XG4gIH0pO1xuXG4gIGl0KCdnZXRzIGJ5IGlkJywgKCkgPT4ge1xuICAgIGNvbnN0IGRhdGFTb3VyY2UgPSBuZXcgQ29udGVudENoYW5uZWxEYXRhU291cmNlKCk7XG4gICAgZGF0YVNvdXJjZS5nZXQgPSBidWlsZEdldE1vY2soW3sgSWQ6IDEgfV0sIGRhdGFTb3VyY2UpO1xuICAgIGNvbnN0IHJlc3VsdCA9IGRhdGFTb3VyY2UuZ2V0RnJvbUlkKDEpO1xuICAgIGV4cGVjdChyZXN1bHQpLnJlc29sdmVzLnRvTWF0Y2hTbmFwc2hvdCgpO1xuICAgIGV4cGVjdChkYXRhU291cmNlLmdldC5tb2NrLmNhbGxzKS50b01hdGNoU25hcHNob3QoKTtcbiAgfSk7XG59KTtcbiJdfQ==