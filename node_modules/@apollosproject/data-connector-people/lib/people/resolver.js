"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _serverCore = require("@apollosproject/server-core");

var _default = {
  Query: {
    people: (root, {
      email
    }, {
      dataSources
    }) => dataSources.Person.getFromEmail(email)
  },
  Mutation: {
    updateProfileField: (root, {
      input: {
        field,
        value
      }
    }, {
      dataSources
    }) => dataSources.Person.updateProfile([{
      field,
      value
    }]),
    updateProfileFields: (root, {
      input
    }, {
      dataSources
    }) => dataSources.Person.updateProfile(input),
    uploadProfileImage: async (root, {
      file,
      size
    }, {
      dataSources
    }) => dataSources.Person.uploadProfileImage(file, size)
  },
  Person: {
    id: ({
      id
    }, args, context, {
      parentType
    }) => (0, _serverCore.createGlobalId)(id, parentType.name),
    photo: ({
      photo: {
        url
      }
    }) => ({
      uri: url
    }),
    firstName: ({
      firstName
    }) => typeof firstName === 'object' ? '' : firstName,
    lastName: ({
      lastName
    }) => typeof lastName === 'object' ? '' : lastName
  }
};
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wZW9wbGUvcmVzb2x2ZXIuanMiXSwibmFtZXMiOlsiUXVlcnkiLCJwZW9wbGUiLCJyb290IiwiZW1haWwiLCJkYXRhU291cmNlcyIsIlBlcnNvbiIsImdldEZyb21FbWFpbCIsIk11dGF0aW9uIiwidXBkYXRlUHJvZmlsZUZpZWxkIiwiaW5wdXQiLCJmaWVsZCIsInZhbHVlIiwidXBkYXRlUHJvZmlsZSIsInVwZGF0ZVByb2ZpbGVGaWVsZHMiLCJ1cGxvYWRQcm9maWxlSW1hZ2UiLCJmaWxlIiwic2l6ZSIsImlkIiwiYXJncyIsImNvbnRleHQiLCJwYXJlbnRUeXBlIiwibmFtZSIsInBob3RvIiwidXJsIiwidXJpIiwiZmlyc3ROYW1lIiwibGFzdE5hbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7ZUFFZTtBQUNiQSxFQUFBQSxLQUFLLEVBQUU7QUFDTEMsSUFBQUEsTUFBTSxFQUFFLENBQUNDLElBQUQsRUFBTztBQUFFQyxNQUFBQTtBQUFGLEtBQVAsRUFBa0I7QUFBRUMsTUFBQUE7QUFBRixLQUFsQixLQUNOQSxXQUFXLENBQUNDLE1BQVosQ0FBbUJDLFlBQW5CLENBQWdDSCxLQUFoQztBQUZHLEdBRE07QUFLYkksRUFBQUEsUUFBUSxFQUFFO0FBQ1JDLElBQUFBLGtCQUFrQixFQUFFLENBQUNOLElBQUQsRUFBTztBQUFFTyxNQUFBQSxLQUFLLEVBQUU7QUFBRUMsUUFBQUEsS0FBRjtBQUFTQyxRQUFBQTtBQUFUO0FBQVQsS0FBUCxFQUFvQztBQUFFUCxNQUFBQTtBQUFGLEtBQXBDLEtBQ2xCQSxXQUFXLENBQUNDLE1BQVosQ0FBbUJPLGFBQW5CLENBQWlDLENBQUM7QUFBRUYsTUFBQUEsS0FBRjtBQUFTQyxNQUFBQTtBQUFULEtBQUQsQ0FBakMsQ0FGTTtBQUdSRSxJQUFBQSxtQkFBbUIsRUFBRSxDQUFDWCxJQUFELEVBQU87QUFBRU8sTUFBQUE7QUFBRixLQUFQLEVBQWtCO0FBQUVMLE1BQUFBO0FBQUYsS0FBbEIsS0FDbkJBLFdBQVcsQ0FBQ0MsTUFBWixDQUFtQk8sYUFBbkIsQ0FBaUNILEtBQWpDLENBSk07QUFLUkssSUFBQUEsa0JBQWtCLEVBQUUsT0FBT1osSUFBUCxFQUFhO0FBQUVhLE1BQUFBLElBQUY7QUFBUUMsTUFBQUE7QUFBUixLQUFiLEVBQTZCO0FBQUVaLE1BQUFBO0FBQUYsS0FBN0IsS0FDbEJBLFdBQVcsQ0FBQ0MsTUFBWixDQUFtQlMsa0JBQW5CLENBQXNDQyxJQUF0QyxFQUE0Q0MsSUFBNUM7QUFOTSxHQUxHO0FBYWJYLEVBQUFBLE1BQU0sRUFBRTtBQUNOWSxJQUFBQSxFQUFFLEVBQUUsQ0FBQztBQUFFQSxNQUFBQTtBQUFGLEtBQUQsRUFBU0MsSUFBVCxFQUFlQyxPQUFmLEVBQXdCO0FBQUVDLE1BQUFBO0FBQUYsS0FBeEIsS0FDRixnQ0FBZUgsRUFBZixFQUFtQkcsVUFBVSxDQUFDQyxJQUE5QixDQUZJO0FBR05DLElBQUFBLEtBQUssRUFBRSxDQUFDO0FBQUVBLE1BQUFBLEtBQUssRUFBRTtBQUFFQyxRQUFBQTtBQUFGO0FBQVQsS0FBRCxNQUF5QjtBQUFFQyxNQUFBQSxHQUFHLEVBQUVEO0FBQVAsS0FBekIsQ0FIRDtBQUlORSxJQUFBQSxTQUFTLEVBQUUsQ0FBQztBQUFFQSxNQUFBQTtBQUFGLEtBQUQsS0FDVCxPQUFPQSxTQUFQLEtBQXFCLFFBQXJCLEdBQWdDLEVBQWhDLEdBQXFDQSxTQUxqQztBQU1OQyxJQUFBQSxRQUFRLEVBQUUsQ0FBQztBQUFFQSxNQUFBQTtBQUFGLEtBQUQsS0FBbUIsT0FBT0EsUUFBUCxLQUFvQixRQUFwQixHQUErQixFQUEvQixHQUFvQ0E7QUFOM0Q7QUFiSyxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlR2xvYmFsSWQgfSBmcm9tICdAYXBvbGxvc3Byb2plY3Qvc2VydmVyLWNvcmUnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIFF1ZXJ5OiB7XG4gICAgcGVvcGxlOiAocm9vdCwgeyBlbWFpbCB9LCB7IGRhdGFTb3VyY2VzIH0pID0+XG4gICAgICBkYXRhU291cmNlcy5QZXJzb24uZ2V0RnJvbUVtYWlsKGVtYWlsKSxcbiAgfSxcbiAgTXV0YXRpb246IHtcbiAgICB1cGRhdGVQcm9maWxlRmllbGQ6IChyb290LCB7IGlucHV0OiB7IGZpZWxkLCB2YWx1ZSB9IH0sIHsgZGF0YVNvdXJjZXMgfSkgPT5cbiAgICAgIGRhdGFTb3VyY2VzLlBlcnNvbi51cGRhdGVQcm9maWxlKFt7IGZpZWxkLCB2YWx1ZSB9XSksXG4gICAgdXBkYXRlUHJvZmlsZUZpZWxkczogKHJvb3QsIHsgaW5wdXQgfSwgeyBkYXRhU291cmNlcyB9KSA9PlxuICAgICAgZGF0YVNvdXJjZXMuUGVyc29uLnVwZGF0ZVByb2ZpbGUoaW5wdXQpLFxuICAgIHVwbG9hZFByb2ZpbGVJbWFnZTogYXN5bmMgKHJvb3QsIHsgZmlsZSwgc2l6ZSB9LCB7IGRhdGFTb3VyY2VzIH0pID0+XG4gICAgICBkYXRhU291cmNlcy5QZXJzb24udXBsb2FkUHJvZmlsZUltYWdlKGZpbGUsIHNpemUpLFxuICB9LFxuICBQZXJzb246IHtcbiAgICBpZDogKHsgaWQgfSwgYXJncywgY29udGV4dCwgeyBwYXJlbnRUeXBlIH0pID0+XG4gICAgICBjcmVhdGVHbG9iYWxJZChpZCwgcGFyZW50VHlwZS5uYW1lKSxcbiAgICBwaG90bzogKHsgcGhvdG86IHsgdXJsIH0gfSkgPT4gKHsgdXJpOiB1cmwgfSksXG4gICAgZmlyc3ROYW1lOiAoeyBmaXJzdE5hbWUgfSkgPT5cbiAgICAgIHR5cGVvZiBmaXJzdE5hbWUgPT09ICdvYmplY3QnID8gJycgOiBmaXJzdE5hbWUsXG4gICAgbGFzdE5hbWU6ICh7IGxhc3ROYW1lIH0pID0+ICh0eXBlb2YgbGFzdE5hbWUgPT09ICdvYmplY3QnID8gJycgOiBsYXN0TmFtZSksXG4gIH0sXG59O1xuIl19