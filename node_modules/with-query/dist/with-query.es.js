import qs from 'qs';
import objectAssign from 'object-assign';

function parseQuery(q, opt) {
  if (typeof q === 'object') {
    return q;
  }

  return q ? qs.parse(q, opt) : {};
}

function withQuery(url, query, opts) {
  if (!query || typeof query === 'object' && Object.keys(query).length < 1) {
    return url;
  }

  var parseOpt = opts && opts.parseOpt || {};
  var stringifyOpt = opts && opts.stringifyOpt || {};
  var noHash = opts && opts.noHash || false;
  var originalUrl = url || '';
  var baseUrl = originalUrl;
  var baseQuery = '';
  var baseHash = ''; // query

  if (originalUrl.indexOf('?') !== -1) {
    var parts = baseUrl.split('?');
    baseUrl = parts[0];
    baseQuery = parts[1];
  } // hash


  if (originalUrl.indexOf('#') !== -1) {
    if (baseUrl.indexOf('#') !== -1) {
      var _parts = baseUrl.split('#');

      baseUrl = _parts[0];
      baseHash = _parts[1];
    } else if (baseQuery && baseQuery.indexOf('#') !== -1) {
      var _parts2 = baseQuery.split('#');

      baseQuery = _parts2[0];
      baseHash = _parts2[1];
    }
  }

  var baseQueryObj = parseQuery(baseQuery, parseOpt);
  var queryObj = parseQuery(query, parseOpt);
  var finalQuery = qs.stringify(objectAssign({}, baseQueryObj, queryObj), stringifyOpt);
  return "" + baseUrl + (finalQuery ? "?" + finalQuery : '') + (!noHash && baseHash ? "#" + baseHash : '');
}

export default withQuery;
